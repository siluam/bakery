(import bakery [ls])
(import oreo)
(import oreo [nots?])
(import pathlib [Path])
(import pytest [mark])
(require hyrule [->])
(setv cookies (/ (.resolve (. (Path __file__) parent parent) :strict True) "cookies"))
(setv cookies-ls (.ls oreo cookies))
(setv assorted-cookies (.ls oreo cookies :sort True))
(import bakery [tail])
(import hy [mangle] oreo [first-last-n])
(defn [mark.baking mark.piping] test-bake-freezer-hash []
      (try (setv tails (| (ls [] :a True cookies) tail))
           (.bake- ls :freezer-hash tails.m/freezer-hash :m/list True :m/sort None :m/filter nots?)
           (-> assorted-cookies (first-last-n :last True :number 10 :type- list) (= (tails)) assert)
           (-> (ls) (isinstance list) (not) assert)
           (finally (.splat- ls :freezer-hash tails.m/freezer-hash)
                    (assert (not (in (mangle "m/sort") tails))))))
(defn [mark.baking mark.piping] test-bake-freezer []
      (try (setv tails (| (ls [] :a True cookies) tail))
           (.bake- ls :freezer-hash (hash (tuple tails.m/freezer)) :m/list True :m/sort None :m/filter nots?)
           (-> assorted-cookies (first-last-n :last True :number 10 :type- list) (= (tails)) assert)
           (-> (ls) (isinstance list) (not) assert)
           (finally (.splat- ls :freezer-hash (hash (tuple tails.m/freezer)))
                    (assert (not (in (mangle "m/sort") tails))))))
